{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbas/Documents/GitHub/my-react-app/client/src/component/TableTwo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableTwo = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [table, setTable] = useState([]);\n  const [dizi, setDizi] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [serie, setSerie] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:9363/post/panel\");\n      setTable(response.data);\n      setData(response.data);\n\n      // Kullanıcı adları ve posta kodlarını alarak options ve series'i güncelle\n      const kullaniciAdListesi = response.data.map(item => item.kullaniciAd);\n      const veri = kullaniciAdListesi.length;\n      const postaKodListesi = response.data.map(item => item.postaCode);\n      const data = postaKodListesi.length;\n      const seriesData = [{\n        name: \"postaCode\",\n        data: [data]\n      }];\n      const serieData = [{\n        name: \"kullaniciAd\",\n        data: [veri]\n      }];\n      setSeries(seriesData);\n      setSerie(serieData);\n\n      // dizi state'ini güncelle\n      setDizi([...seriesData, ...serieData]);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [options, setOptions] = useState({\n    series: [76, 67, 61, 90],\n    options: {\n      chart: {\n        height: 390,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          offsetY: 0,\n          startAngle: 0,\n          endAngle: 270,\n          hollow: {\n            margin: 5,\n            size: '30%',\n            background: 'transparent',\n            image: undefined\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              show: false\n            }\n          }\n        }\n      },\n      colors: ['#1ab7ea', '#0084ff', '#39539E', '#0077B5'],\n      labels: ['Kullanıcı Ad', 'Posta Code'],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: '16px',\n        position: 'left',\n        offsetX: 160,\n        offsetY: 15,\n        labels: {\n          useSeriesColors: true\n        },\n        markers: {\n          size: 0\n        },\n        formatter: function (seriesName, opts) {\n          return seriesName + \":  \" + opts.w.globals.series[opts.seriesIndex];\n        },\n        itemMargin: {\n          vertical: 3\n        }\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          legend: {\n            show: false\n          }\n        }\n      }]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: dizi,\n      type: \"radialBar\",\n      width: \"500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(TableTwo, \"qMj/sfPXdwP3KdkXsNS9Ox7Iev8=\");\n_c = TableTwo;\nexport default TableTwo;\nvar _c;\n$RefreshReg$(_c, \"TableTwo\");","map":{"version":3,"names":["useState","useEffect","Chart","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TableTwo","_s","data","setData","table","setTable","dizi","setDizi","series","setSeries","serie","setSerie","fetchData","response","get","kullaniciAdListesi","map","item","kullaniciAd","veri","length","postaKodListesi","postaCode","seriesData","name","serieData","error","console","options","setOptions","chart","height","type","plotOptions","radialBar","offsetY","startAngle","endAngle","hollow","margin","size","background","image","undefined","dataLabels","show","value","colors","labels","legend","floating","fontSize","position","offsetX","useSeriesColors","markers","formatter","seriesName","opts","w","globals","seriesIndex","itemMargin","vertical","responsive","breakpoint","children","ReactApexChart","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeynepbas/Documents/GitHub/my-react-app/client/src/component/TableTwo.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\n\nconst TableTwo = () => {\n  const [data, setData] = useState([]);\n  const [table, setTable] = useState([]);\n  const [dizi, setDizi] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [serie, setSerie] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:9363/post/panel\");\n      setTable(response.data);\n      setData(response.data);\n      \n      // Kullanıcı adları ve posta kodlarını alarak options ve series'i güncelle\n      const kullaniciAdListesi = response.data.map(item => item.kullaniciAd);\n      const veri=kullaniciAdListesi.length;\n      const postaKodListesi = response.data.map(item => item.postaCode);\n      const data=postaKodListesi.length;\n      const seriesData = [{ name: \"postaCode\", data: [data] }];\n      const serieData = [{ name: \"kullaniciAd\", data: [veri] }];\n\n      setSeries(seriesData);\n      setSerie(serieData);\n\n      // dizi state'ini güncelle\n      setDizi([...seriesData, ...serieData]);\n\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const [options, setOptions] = useState({\n    series: [76, 67, 61, 90],\n    options: {\n      chart: {\n        height: 390,\n        type: 'radialBar',\n      },\n      plotOptions: {\n        radialBar: {\n          offsetY: 0,\n          startAngle: 0,\n          endAngle: 270,\n          hollow: {\n            margin: 5,\n            size: '30%',\n            background: 'transparent',\n            image: undefined,\n          },\n          dataLabels: {\n            name: {\n              show: false,\n            },\n            value: {\n              show: false,\n            }\n          }\n        }\n      },\n      colors: ['#1ab7ea', '#0084ff', '#39539E', '#0077B5'],\n      labels: ['Kullanıcı Ad', 'Posta Code'],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: '16px',\n        position: 'left',\n        offsetX: 160,\n        offsetY: 15,\n        labels: {\n          useSeriesColors: true,\n        },\n        markers: {\n          size: 0\n        },\n        formatter: function(seriesName, opts) {\n          return seriesName + \":  \" + opts.w.globals.series[opts.seriesIndex]\n        },\n        itemMargin: {\n          vertical: 3\n        }\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          legend: {\n              show: false\n          }\n        }\n      }]\n    },\n  \n  \n  \n  });\n\n\n\n  return (\n    <>\n        <ReactApexChart\n              options={options}\n              series={dizi}\n              type=\"radialBar\"\n              width=\"500\"\n            />\n    </>\n  );\n};\nexport default TableTwo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}