{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbas/Desktop/my-react-app/client/src/component/TableTwo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableTwo = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [table, setTable] = useState([]);\n  const [dizi, setDizi] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:9363/post/panel\");\n      setTable(response.data);\n      setData(response.data);\n\n      // Kullanıcı adları ve posta kodlarını alarak options ve series'i güncelle\n      const kullaniciAdListesi = response.data.map(item => item.kullaniciAd);\n      const postaKodListesi = response.data.map(item => item.postaCode);\n      const seriesData = [{\n        name: \"postaCode\",\n        data: postaKodListesi\n      }];\n      const serieData = [{\n        name: \"kullaniciAd\",\n        data: kullaniciAdListesi\n      }];\n      setSeries(seriesData);\n      setSerie(serieData);\n\n      // dizi state'ini güncelle\n      setDizi([...seriesData, ...serieData]);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [options, setOptions] = useState({\n    chart: {\n      id: \"basic-bar\"\n    },\n    xaxis: {\n      categories: [\"Kullanıcı Ad\", \"Posta Code\"] // Başlangıçta boş olarak ayarlayın, veriler geldiğinde güncellenecek\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: dizi,\n      type: \"bar\",\n      width: \"500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(TableTwo, \"gd0vU1W8WcXc4mPC6NHStKdrGWA=\");\n_c = TableTwo;\nexport default TableTwo;\nvar _c;\n$RefreshReg$(_c, \"TableTwo\");","map":{"version":3,"names":["useState","useEffect","Chart","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TableTwo","_s","data","setData","table","setTable","dizi","setDizi","fetchData","response","get","kullaniciAdListesi","map","item","kullaniciAd","postaKodListesi","postaCode","seriesData","name","serieData","setSeries","setSerie","error","console","options","setOptions","chart","id","xaxis","categories","children","series","type","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeynepbas/Desktop/my-react-app/client/src/component/TableTwo.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\n\nconst TableTwo = () => {\n  const [data, setData] = useState([]);\n  const [table, setTable] = useState([]);\n  const [dizi, setDizi] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:9363/post/panel\");\n      setTable(response.data);\n      setData(response.data);\n      \n      // Kullanıcı adları ve posta kodlarını alarak options ve series'i güncelle\n      const kullaniciAdListesi = response.data.map(item => item.kullaniciAd);\n      const postaKodListesi = response.data.map(item => item.postaCode);\n\n      const seriesData = [{ name: \"postaCode\", data: postaKodListesi }];\n      const serieData = [{ name: \"kullaniciAd\", data: kullaniciAdListesi }];\n\n      setSeries(seriesData);\n      setSerie(serieData);\n\n      // dizi state'ini güncelle\n      setDizi([...seriesData, ...serieData]);\n\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const [options, setOptions] = useState({\n    chart: {\n      id: \"basic-bar\"\n    },\n    xaxis: {\n      categories: [\"Kullanıcı Ad\",\"Posta Code\"] // Başlangıçta boş olarak ayarlayın, veriler geldiğinde güncellenecek\n    }\n  });\n\n\n\n  return (\n    <>\n        <Chart\n              options={options}\n              series={dizi}\n              type=\"bar\"\n              width=\"500\"\n            />\n    </>\n  );\n};\nexport default TableTwo;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,kCAAkC,CAAC;MACpEL,QAAQ,CAACI,QAAQ,CAACP,IAAI,CAAC;MACvBC,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;;MAEtB;MACA,MAAMS,kBAAkB,GAAGF,QAAQ,CAACP,IAAI,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,WAAW,CAAC;MACtE,MAAMC,eAAe,GAAGN,QAAQ,CAACP,IAAI,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,SAAS,CAAC;MAEjE,MAAMC,UAAU,GAAG,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEhB,IAAI,EAAEa;MAAgB,CAAC,CAAC;MACjE,MAAMI,SAAS,GAAG,CAAC;QAAED,IAAI,EAAE,aAAa;QAAEhB,IAAI,EAAES;MAAmB,CAAC,CAAC;MAErES,SAAS,CAACH,UAAU,CAAC;MACrBI,QAAQ,CAACF,SAAS,CAAC;;MAEnB;MACAZ,OAAO,CAAC,CAAC,GAAGU,UAAU,EAAE,GAAGE,SAAS,CAAC,CAAC;IAExC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC;IACrCkC,KAAK,EAAE;MACLC,EAAE,EAAE;IACN,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAE,CAAC,cAAc,EAAC,YAAY,CAAC,CAAC;IAC5C;EACF,CAAC,CAAC;EAIF,oBACEhC,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACIjC,OAAA,CAACH,KAAK;MACA8B,OAAO,EAAEA,OAAQ;MACjBO,MAAM,EAAEzB,IAAK;MACb0B,IAAI,EAAC,KAAK;MACVC,KAAK,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACR,CAAC;AAEP,CAAC;AAACpC,EAAA,CAtDID,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}